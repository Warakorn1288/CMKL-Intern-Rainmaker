{"version":3,"sources":["components/Header.js","components/Button.js","components/Menu.js","components/Transaction.js","components/TransactionList.js","components/AccountInfo.js","components/AddDeposit.js","components/AddWithdraw.js","components/EditAccountInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","showAdd","className","defaultProps","Button","color","text","onClick","style","backgroundColor","Menu","onAddDeposit","showAddDeposit","onAddWithdraw","showAddWithdraw","onEditInfo","showEditInfo","deleteAccount","Transaction","transaction","onDelete","transactionName","cursor","id","amount","TransactionList","transactionList","map","AccountInfo","accountInfo","totalAmount","i","length","parseFloat","accountName","accountNumber","AddDeposit","onAdd","useState","setTransactionName","setAmount","onSubmit","e","preventDefault","isNaN","alert","type","placeholder","value","onChange","target","AddWithdraw","EditAccountInfo","setAccountName","setAccountNumber","App","setShowAddDeposit","setShowAddWithdraw","setShowEditInfo","setAccountInfo","setTransactionList","Math","floor","random","newTransaction","Number","newAccountInfo","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0f4a802.chunk.js","sourcesContent":["const Header = ({ title, showAdd }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'My Bank Account Manager',\r\n}\r\n\r\nexport default Header\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color }}className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import Button from \"./Button\"\r\n\r\nconst Menu = ({ onAddDeposit, showAddDeposit, onAddWithdraw, showAddWithdraw, onEditInfo, showEditInfo, deleteAccount }) => {\r\n    return (\r\n        <div className='header'>\r\n            <Button color={showAddDeposit ? 'green' : 'grey'} text='Deposit' onClick={onAddDeposit} />\r\n            <Button color={showAddWithdraw ? 'green' : 'grey'} text='Withdraw' onClick={onAddWithdraw} />\r\n            <Button color={showEditInfo ? 'green' : 'grey'} text='Edit Info' onClick={onEditInfo} />\r\n            <Button color='grey' text='Delete Account' onClick={deleteAccount}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Transaction = ({ transaction, onDelete }) => {\r\n    return (\r\n        <div className='transaction'>\r\n            <h3>\r\n                {transaction.transactionName}{' '}\r\n                <FaTimes \r\n                    style={{ color: 'red', cursor: 'pointer' }} \r\n                    onClick={() => onDelete(transaction.id)}\r\n                />\r\n            </h3>\r\n            <p>{transaction.amount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import Transaction from \"./Transaction\"\r\n\r\nconst TransactionList = ({ transactionList, onDelete }) => {\r\n    return (\r\n        <>\r\n            {transactionList.map((transaction) => (\r\n                <Transaction key={transaction.id} transaction={transaction} onDelete={onDelete} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","const AccountInfo = ({ accountInfo, transactionList }) => {\r\n    let totalAmount = 0;\r\n\r\n    for (let i = 0; i < transactionList.length; i++) {\r\n        totalAmount += parseFloat(transactionList[i].amount);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>Account Name: {accountInfo.accountName}</p>\r\n            <p>Account Number: {accountInfo.accountNumber}</p>\r\n            <p>Total: {totalAmount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountInfo\r\n","import { useState } from 'react'\r\n\r\nconst AddDeposit = ({ onAdd }) => {\r\n    const [transactionName, setTransactionName] = useState('')\r\n    const [amount, setAmount] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!transactionName) {\r\n            alert('Please add a deposit name')\r\n            return\r\n        }\r\n        else if(!amount) {\r\n            alert('Please add a deposit amount')\r\n            return\r\n        }\r\n        else if(isNaN(amount)) { // Not a Number\r\n            alert('Deposit amount must be a number')\r\n            return\r\n        }\r\n        else {}\r\n\r\n        onAdd({ transactionName, amount })\r\n\r\n        setTransactionName('')\r\n        setAmount('')\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <dir className='form-control'>\r\n                <label>Deposit</label>\r\n                <input type='text' placeholder='Add Transaction Name' value={transactionName} onChange={(e) => setTransactionName(e.target.value)} />\r\n            </dir>\r\n            <dir className='form-control'>\r\n                <label>Amount</label>\r\n                <input type='text' placeholder='Add Amount' value={amount} onChange={(e) => setAmount(e.target.value)} />\r\n            </dir>\r\n\r\n            <input type='submit' value='Save Deposit' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddDeposit\r\n","import { useState } from 'react'\r\n\r\nconst AddWithdraw = ({ onAdd }) => {\r\n    const [transactionName, setTransactionName] = useState('')\r\n    const [amount, setAmount] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!transactionName) {\r\n            alert('Please add a withdraw name')\r\n            return\r\n        }\r\n        else if(!amount) {\r\n            alert('Please add a withdraw amount')\r\n            return\r\n        }\r\n        else if(isNaN(amount)) { // Not a Number\r\n            alert('Withdraw amount must be a number')\r\n            return\r\n        }\r\n        else {}\r\n\r\n        onAdd({ transactionName, amount })\r\n\r\n        setTransactionName('')\r\n        setAmount('')\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <dir className='form-control'>\r\n                <label>Withdraw</label>\r\n                <input type='text' placeholder='Add Transaction Name' value={transactionName} onChange={(e) => setTransactionName(e.target.value)} />\r\n            </dir>\r\n            <dir className='form-control'>\r\n                <label>Amount</label>\r\n                <input type='text' placeholder='Add Amount' value={amount} onChange={(e) => setAmount(e.target.value)} />\r\n            </dir>\r\n\r\n            <input type='submit' value='Save Withdraw' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddWithdraw\r\n","import { useState } from 'react'\r\n\r\nconst EditAccountInfo = ({ onAdd }) => {\r\n    const [accountName, setAccountName] = useState('')\r\n    const [accountNumber, setAccountNumber] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!accountName && !accountNumber) {\r\n            alert('Please add a change before saved')\r\n            return\r\n        }\r\n\r\n        onAdd({ accountName, accountNumber })\r\n\r\n        setAccountName('')\r\n        setAccountNumber('')\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <dir className='form-control'>\r\n                <label>New Account Name</label>\r\n                <input type='text' placeholder='Add New Account Name' value={accountName} onChange={(e) => setAccountName(e.target.value)} />\r\n            </dir>\r\n            <dir className='form-control'>\r\n                <label>New Account Number</label>\r\n                <input type='text' placeholder='Add New Account Number' value={accountNumber} onChange={(e) => setAccountNumber(e.target.value)} />\r\n            </dir>\r\n\r\n            <input type='submit' value='Save' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditAccountInfo\r\n","import React from \"react\";\nimport { useState } from 'react'\nimport Header from \"./components/Header\"\nimport Menu from \"./components/Menu\"\nimport TransactionList from \"./components/TransactionList\"\nimport AccountInfo from './components/AccountInfo'\nimport AddDeposit from './components/AddDeposit'\nimport AddWithdraw from './components/AddWithdraw'\nimport EditAccountInfo from './components/EditAccountInfo'\n\nconst App = () => {\n  const [showAddDeposit, setShowAddDeposit] = useState(false)\n  const [showAddWithdraw, setShowAddWithdraw] = useState(false)\n  const [showEditInfo, setShowEditInfo] = useState(false)\n\n  const [accountInfo, setAccountInfo] = useState({\n    accountName: '',\n    accountNumber: ''\n  })\n\n  const [transactionList, setTransactionList] = useState([\n    {\n      id: 1,\n      transactionName: 'Withdraw',\n      amount: '-1',\n    },\n    {\n      id: 2,\n      transactionName: 'Deposit',\n      amount: '+1',\n    },\n  ])\n\n  // Edit account info\n  const editAccountInfo = (newAccountInfo) => {\n    if(newAccountInfo.accountName.length === 0 && newAccountInfo.accountNumber.length !== 0) {\n      newAccountInfo.accountName = accountInfo.accountName\n    }\n    else if(newAccountInfo.accountName.length !== 0 && newAccountInfo.accountNumber.length === 0) {\n      newAccountInfo.accountNumber = accountInfo.accountNumber\n    }\n    else {}\n    setAccountInfo(newAccountInfo)\n  }\n\n  // Delete Account\n  const deleteAccount = () => {\n    let newAccountInfo = {\n      accountName: '',\n      accountNumber: ''\n    }\n    setAccountInfo(newAccountInfo)\n    setTransactionList([])\n  }\n\n  // Add Deposit\n  const deposit = (transaction) => {\n    const id = Math.floor(Math.random() * 100000) + 1\n    const newTransaction = { id, ...transaction }\n    if(Number(newTransaction.amount) >= 0) {\n      newTransaction.amount = '+' + (1 * newTransaction.amount)\n    } \n    setTransactionList([...transactionList, newTransaction])\n  }\n\n  // Add Withdraw\n  const withdraw = (transaction) => {\n    const id = Math.floor(Math.random() * 100000) + 1\n    const newTransaction = { id, ...transaction }\n    if(Number(newTransaction.amount) >= 0) {\n      newTransaction.amount = '-' + newTransaction.amount\n    }\n    else {\n      newTransaction.amount = '+' + (-1 * newTransaction.amount)\n    }\n    setTransactionList([...transactionList, newTransaction])\n  }\n\n  // Delete Transaction\n  const deleteTransaction = (id) => {\n    // filter: keep tasks with within the condition, others are deleted.\n    setTransactionList(transactionList.filter((transaction) => transaction.id !== id))\n  }\n\n  return (\n    <div className='container'>\n      <Header />\n      <AccountInfo accountInfo={accountInfo} transactionList={transactionList} />\n      <br />\n      <Menu \n        onAddDeposit={() => setShowAddDeposit(!showAddDeposit)} showAddDeposit={showAddDeposit}\n        onAddWithdraw={() => setShowAddWithdraw(!showAddWithdraw)} showAddWithdraw={showAddWithdraw}\n        onEditInfo={() => setShowEditInfo(!showEditInfo)} showEditInfo={showEditInfo}\n        deleteAccount={() => deleteAccount()}\n      />\n      {showAddDeposit && <AddDeposit onAdd={deposit} />}\n      {showAddWithdraw && <AddWithdraw onAdd={withdraw} />}\n      {showEditInfo && <EditAccountInfo onAdd={editAccountInfo} />}\n      {transactionList.length > 0 ? (\n        <TransactionList transactionList={transactionList} onDelete={deleteTransaction} />\n      ) : (\n        <p className='center'>No Transaciton To Show</p> \n      )}\n    </div>\n  );\n}\n\n/* Print Option (Not Finished)\nimport ReactToPrint from \"react-to-print\";\nimport { useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\n*/\n\n/* Print Option (Not Finished)\nconst AppPrintable = () => {\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current\n  });\n\n  return (\n  <div>\n    <App ref={componentRef} />\n    <Button  color='black' text='Print' onClick={handlePrint}/>\n    \n  </div>\n  );\n}\n\nexport {\n  App,\n  AppPrintable\n}\n*/\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n"],"sourceRoot":""}